/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	Date: "String",
	Mutation:{
		createUser:{
			email:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			password:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			network:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		changeWebhook:{
			newUrl:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		setFast:{
			newFast:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		setPublicKey:{
			newPublicKey:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addWebhook:{
			newUrl:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		removeWebhook:{
			removeUrl:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		login:{
			email:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			password:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			remember:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:true
			},
			network:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createDepositAddress:{
			data:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			lifetime_ms:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		setConfirmed:{
			uuid:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	Query:{
		getTransactions:{
			filter:{
				type:"TransactionFilter",
				array:false,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			next:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getTransaction:{
			uuid:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	TransactionFilter: "enum"
}

export const ReturnTypes: Record<string,any> = {
	Mutation:{
		createUser:"CurrentUser",
		changeWebhook:"String",
		regenerateApiKey:"String",
		setFast:"Boolean",
		setPublicKey:"String",
		addWebhook:"String",
		removeWebhook:"String",
		logout:"Boolean",
		login:"CurrentUser",
		signOut:"Boolean",
		createDepositAddress:"DepositAddress",
		setConfirmed:"Transaction"
	},
	Query:{
		currentUser:"CurrentUser",
		getTransactions:"TransactionsType",
		getTransaction:"Transaction"
	},
	CurrentUser:{
		email:"String",
		recieved:"Float",
		isFast:"Boolean",
		webhooks:"String",
		walletAddress:"String"
	},
	BasicUser:{
		email:"String",
		recieved:"Float"
	},
	DepositAddress:{
		publicKey:"String"
	},
	Transaction:{
		uuid:"String",
		senderPk:"String",
		senderTo:"String",
		senderSig:"String",
		senderLm:"Float",
		payload:"String",
		confirmedAt:"Date",
		recieveLm:"Float",
		recieveSig:"String",
		createdAt:"Date",
		status:"String"
	},
	TransactionsType:{
		transactions:"Transaction",
		next:"String"
	}
}